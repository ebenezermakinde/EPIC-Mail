{"version":3,"sources":["../../src/controllers/messageController.js"],"names":["email","receivedMessages","sentMessages","messages","MessageController","req","res","status","json","data","foundEmail","body","sent","filter","message","length","error","unread","newMessage","id","createdOn","format","subject","senderId","receiverId","parentMessageId","push","index","indexOf","splice","getAllMessages","getSentEmail","getUnreadEmail","sendEmail","deleteEmail","getOneEmail"],"mappings":"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","sourcesContent":["import moment from 'moment';\r\nimport { receivedMessages, sentMessages } from '../utils/dummyMessages';\r\nimport { arrayFlatten } from '../helpers/arrayFlatten';\r\n\r\nconst email = [...receivedMessages, ...sentMessages];\r\nconst messages = arrayFlatten(email);\r\n\r\n\r\nclass MessageController {\r\n  // Get all emails\r\n  static getAllMessages(req, res) {\r\n    return res.status(200).json({\r\n      status: 200,\r\n      data: receivedMessages,\r\n    });\r\n  }\r\n\r\n  // Get one email.\r\n  static getOneEmail(req, res) {\r\n    const { foundEmail } = req.body;\r\n    return res.status(200).json({\r\n      status: 200,\r\n      data: [foundEmail],\r\n    });\r\n  }\r\n\r\n  // Get all sent emails\r\n  static getSentEmail(req, res) {\r\n    const sent = messages.filter(message => message.status === 'sent');\r\n    if (sent.length === 0) {\r\n      return res.status(404).json({\r\n        status: 404,\r\n        error: 'No sent items',\r\n      });\r\n    }\r\n    return res.status(200).json({\r\n      status: 200,\r\n      data: sent,\r\n    });\r\n  }\r\n\r\n  // Get all unread messages\r\n  static getUnreadEmail(req, res) {\r\n    const unread = messages.filter(message => message.status === 'unread');\r\n    if (unread.length === 0) {\r\n      return res.status(404).json({\r\n        status: 404,\r\n        error: 'No unread emails',\r\n      });\r\n    }\r\n    return res.status(200).json({\r\n      status: 200,\r\n      data: unread,\r\n    });\r\n  }\r\n\r\n  // Send an email\r\n  static sendEmail(req, res) {\r\n    const newMessage = {\r\n      id: messages.length + 1,\r\n      createdOn: moment().format('MMMM Do YYYY, h:mm:ss a'),\r\n      subject: req.body.subject,\r\n      message: req.body.message,\r\n      senderId: 1,\r\n      receiverId: messages.length - 1,\r\n      parentMessageId: messages.length + 1,\r\n      status: 'sent',\r\n    };\r\n    messages.push(newMessage);\r\n    return res.status(201).json({\r\n      status: 201,\r\n      data: [newMessage],\r\n    });\r\n  }\r\n\r\n  // Delete an email\r\n  static deleteEmail(req, res) {\r\n    const { foundEmail } = req.body;\r\n    const index = messages.indexOf(foundEmail);\r\n    messages.splice(index, 1);\r\n    return res.status(200).json({\r\n      status: 200,\r\n      data: [{\r\n        message: 'Email has been successfully deleted',\r\n      }],\r\n    });\r\n  }\r\n}\r\n\r\nexport const {\r\n  getAllMessages, getSentEmail, getUnreadEmail, sendEmail,\r\n  deleteEmail, getOneEmail,\r\n} = MessageController;\r\n"],"file":"messageController.js"}